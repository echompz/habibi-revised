generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                      String    @id @default(uuid())
  name                    String
  category                String    @default("uncategorized")
  description             String 
  price                   Float
  stock                   Int
  imagePath               String
  isAvailableForPurchase  Boolean   @default(true)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  orders Order[]
}

model User {
  id          String   @id @default(uuid())
  name        String?
  email       String   @unique
  password    String?
  role        String   @default("customer") // "admin", "customer", "seller"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders Order[]
}

model Shipping {
  shippingId     String @id @default(uuid())
  orderId        String
  customerId     String
  productId      String
  customerName   String
  address        String
  orderDate      DateTime
  qty            Int
  trackingNumber String
  courier        String
  status         String
}

model Review {
  id        String   @id @default(uuid())
  rating    Int      // 1-5 stars
  comment   String
  createdAt DateTime @default(now())
  
  // Relations
  orderId   String   @unique  // One review per order
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Order {
  id                  String   @id @default(uuid())
  pricePaidInPeso    Float
  quantity           Int
  shippingStatus     String   @default("not-shipped") // Example: "not-shipped", "packing", "shipped", "delivered", "cancelled"
  shippingId         String?  // Nullable field for tracking shipments
  address            String   // Shipping address
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  orderGroupId       String?   // Nullable field for order IDs
  specialInstructions String?

  userId    String
  productId String

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)
  review  Review?
}